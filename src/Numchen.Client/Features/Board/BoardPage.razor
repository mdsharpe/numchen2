@page "/play"

@implements IDisposable
@inject GameState State

<div class="board">

    <NextCard Value="State.NextCard"></NextCard>

    <div class="board__columns">
        @foreach (var (col, i) in State.Board.Columns.Select((o, i) => (o, i)))
        {
            <Column Index="i" Cards="col.Reverse()" OnAddHereCallback="@OnColumnAddHere"></Column>
        }
    </div>

    <div class="board__goals">
        @foreach (var goal in State.Board.Goals)
        {
            <Goal Value="goal"></Goal>
        }
    </div>

</div>

@code {
    [Parameter]
    public EventCallback<int> OnMoveCardToColumnCallback { get; set; }

    protected override void OnInitialized()
    {
        State.Initialize();
        State.OnChange += StateHasChanged;
    }

    void IDisposable.Dispose()
        => State.OnChange -= StateHasChanged;

    private async Task OnColumnAddHere(int columnIndex)
    {
        await OnMoveCardToColumnCallback.InvokeAsync(columnIndex);
    }
}
